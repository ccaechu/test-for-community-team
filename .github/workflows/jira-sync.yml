name: Create Jira Issue on GitHub Issue

on:
  issues:
    types: [opened]

jobs:
  create_jira_issue:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Extract issue details
        id: extract_details
        run: |
          echo "issue_title=$(jq -r '.issue.title' "$GITHUB_EVENT_PATH")" >> $GITHUB_ENV
          echo "issue_body=$(jq -r '.issue.body' "$GITHUB_EVENT_PATH")" >> $GITHUB_ENV
          echo "issue_url=$(jq -r '.issue.html_url' "$GITHUB_EVENT_PATH")" >> $GITHUB_ENV

      - name: Install Axios
        run: npm install axios

      - name: Create Jira issue
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_EMAIL: ${{ secrets.JIRA_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          JIRA_PROJECT_KEY: ${{ secrets.JIRA_PROJECT_KEY }}
          JIRA_EPIC_KEY: ${{ secrets.JIRA_EPIC_KEY }}
          ISSUE_TITLE: ${{ env.issue_title }}
          ISSUE_BODY: ${{ env.issue_body }}
          ISSUE_URL: ${{ env.issue_url }}
        run: |
          node -e "
            const axios = require('axios');
            const issueTitle = process.env.ISSUE_TITLE;
            const issueBody = process.env.ISSUE_BODY + '\n\nGitHub Issue URL: ' + process.env.ISSUE_URL;
            const auth = Buffer.from(process.env.JIRA_EMAIL + ':' + process.env.JIRA_API_TOKEN).toString('base64');

            const data = {
              fields: {
                project: { key: process.env.JIRA_PROJECT_KEY },
                summary: issueTitle,
                description: issueBody,
                issuetype: { name: 'Task' },
                customfield_10008: process.env.JIRA_EPIC_KEY
              }
            };

            axios.post(process.env.JIRA_BASE_URL + '/rest/api/2/issue/', data, {
              headers: {
                'Authorization': 'Basic ' + auth,
                'Content-Type': 'application/json'
              }
            }).then(response => {
              console.log('Jira issue created:', response.data.key);
            }).catch(error => {
              console.error('Error creating Jira issue:', error.response ? error.response.data : error.message);
              process.exit(1);
            });
          "
